<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--名称空间-->
<mapper namespace="com.test.mapper.BrandMapper">
<!--
    id：唯一标识
    type：映射类型，支持别名
-->
    <resultMap id="brandResultMap" type="brand">
        <result column="brand_name" property="brandName"></result>
        <result column="company_name" property="companyName"></result>
    </resultMap>
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name,company_name,ordered,description,status)
        values (#{brandName} , #{companyName}, #{ordered}, #{description}, #{status});
    </insert>
    <update id="update">
        update tb_brand
        <set>
        <if test="brandName != null and brandName != ''">
            brand_name = #{brandName},
        </if>
        <if test="companyName != null and companyName != ''">
            company_name = #{companyName},
        </if>
        <if test="ordered != null">
            ordered = #{ordered},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
        <if test="status != null">
            status =#{status}
        </if>
        </set>
        where id = #{id};


    </update>
    <delete id="del">
        delete from tb_brand where id=#{id};
    </delete>
    <delete id="deleteByIds">
        delete from tb_brand where id
        in
<!--        使用@Param或array
            separator：分隔符-->
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        ;
    </delete>
    <select id="selectALL" resultMap="brandResultMap">
            select
              *
            from tb_brand;
        </select>

    <!--    <select id="selectALL" resultType="brand">-->
<!--        select *-->
<!--        from tb_brand;-->
<!--    </select>-->
<!--    <sql id="brand_column">id,brand_name as brandName,company_name as companyName,ordered,description,status</sql>-->
<!--    起别名-->
<!--    <select id="selectALL" resultType="brand">-->
<!--        select <include refid="brand_column"></include>-->
<!--        from tb_brand;-->
<!--    </select>-->
<!--    参数占位符：
        #{} 替换为? 防止注入
        ${} 拼sql，存在sql注入问题
        使用时机
        传参使用#{}
        表名使用${}
        特殊字符使用转义字符或CDATA区
-->
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand where id = #{id};
    </select>
<!--    条件查询-->
<!--    <select id="selectByCondition" resultMap="brandResultMap">-->
<!--        select *-->
<!--         from tb_brand-->
<!--            where-->
<!--    status = #{status}-->
<!--    and company_name like #{companyName}-->
<!--    and brand_name like #{brandName}-->
<!--    </select>-->
<!--动态条件查询
if 条件判断
test 逻辑表达式
and问题：使用恒等式 或 <where>替换where
-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where
        <if test="status!=null">
            status = #{status}
        </if>
        <if test="companyName !=null and companyName !='' ">
            and company_name like #{companyName}
        </if>
        <if test="brandName !=null and brand_Name !='' ">
            and brand_name like #{brandName}
        </if>

    </select>
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        where
        <choose>
            <when test="status!=null">
                status=#{status}
            </when>
            <when test="companyName !=null and companyName !='' ">
                company_name like #{companyName}
            </when>
            <when test="brandName !=null and brand_Name !=''">
                brand_name like #{brandName}
            </when>
<!--使用恒等式或使用<where>-->
            <otherwise>
                1=1
            </otherwise>
        </choose>
    </select>

</mapper>